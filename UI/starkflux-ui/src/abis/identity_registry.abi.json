[
  {
    "type": "impl",
    "name": "IdentityRegistryImpl",
    "interface_name": "common::interfaces::IUniversalIdentityRegistry"
  },
  {
    "type": "struct",
    "name": "common::interfaces::Identity",
    "members": [
      {
        "name": "id",
        "type": "core::integer::u64"
      },
      {
        "name": "owner",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "join_timestamp",
        "type": "core::integer::u64"
      },
      {
        "name": "upload_count",
        "type": "core::integer::u64"
      },
      {
        "name": "total_sales_strk",
        "type": "core::integer::u128"
      }
    ]
  },
  {
    "type": "enum",
    "name": "core::bool",
    "variants": [
      {
        "name": "False",
        "type": "()"
      },
      {
        "name": "True",
        "type": "()"
      }
    ]
  },
  {
    "type": "struct",
    "name": "core::integer::u256",
    "members": [
      {
        "name": "low",
        "type": "core::integer::u128"
      },
      {
        "name": "high",
        "type": "core::integer::u128"
      }
    ]
  },
  {
    "type": "interface",
    "name": "common::interfaces::IUniversalIdentityRegistry",
    "items": [
      {
        "type": "function",
        "name": "register",
        "inputs": [],
        "outputs": [
          {
            "type": "core::integer::u64"
          }
        ],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "get_identity",
        "inputs": [
          {
            "name": "id",
            "type": "core::integer::u64"
          }
        ],
        "outputs": [
          {
            "type": "common::interfaces::Identity"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_id",
        "inputs": [
          {
            "name": "owner",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [
          {
            "type": "core::integer::u64"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "record_upload",
        "inputs": [
          {
            "name": "owner",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "record_sale",
        "inputs": [
          {
            "name": "owner",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "amount_strk",
            "type": "core::integer::u128"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "set_registry_address",
        "inputs": [
          {
            "name": "new_address",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "get_reputation_score",
        "inputs": [
          {
            "name": "owner",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [
          {
            "type": "core::integer::u128"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "has_identity",
        "inputs": [
          {
            "name": "owner",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [
          {
            "type": "core::bool"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "authorize_contract",
        "inputs": [
          {
            "name": "contract_addr",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "set_subscription_price",
        "inputs": [
          {
            "name": "price",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "set_monetization_mode",
        "inputs": [
          {
            "name": "mode",
            "type": "core::integer::u8"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "get_monetization_mode",
        "inputs": [
          {
            "name": "owner",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [
          {
            "type": "core::integer::u8"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_subscription_price",
        "inputs": [
          {
            "name": "owner",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [
          {
            "type": "core::integer::u256"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_version",
        "inputs": [],
        "outputs": [
          {
            "type": "core::felt252"
          }
        ],
        "state_mutability": "view"
      }
    ]
  },
  {
    "type": "constructor",
    "name": "constructor",
    "inputs": [
      {
        "name": "initial_owner",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ]
  },
  {
    "type": "event",
    "name": "identity_registry::identity_registry::IdentityRegistry::IdentityRegistered",
    "kind": "struct",
    "members": [
      {
        "name": "id",
        "type": "core::integer::u64",
        "kind": "key"
      },
      {
        "name": "owner",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "key"
      }
    ]
  },
  {
    "type": "event",
    "name": "identity_registry::identity_registry::IdentityRegistry::UploadRecorded",
    "kind": "struct",
    "members": [
      {
        "name": "id",
        "type": "core::integer::u64",
        "kind": "key"
      }
    ]
  },
  {
    "type": "event",
    "name": "identity_registry::identity_registry::IdentityRegistry::SaleRecorded",
    "kind": "struct",
    "members": [
      {
        "name": "id",
        "type": "core::integer::u64",
        "kind": "key"
      },
      {
        "name": "amount",
        "type": "core::integer::u128",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "identity_registry::identity_registry::IdentityRegistry::RegistryAddressChanged",
    "kind": "struct",
    "members": [
      {
        "name": "previous_address",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "new_address",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "identity_registry::identity_registry::IdentityRegistry::Event",
    "kind": "enum",
    "variants": [
      {
        "name": "IdentityRegistered",
        "type": "identity_registry::identity_registry::IdentityRegistry::IdentityRegistered",
        "kind": "nested"
      },
      {
        "name": "UploadRecorded",
        "type": "identity_registry::identity_registry::IdentityRegistry::UploadRecorded",
        "kind": "nested"
      },
      {
        "name": "SaleRecorded",
        "type": "identity_registry::identity_registry::IdentityRegistry::SaleRecorded",
        "kind": "nested"
      },
      {
        "name": "RegistryAddressChanged",
        "type": "identity_registry::identity_registry::IdentityRegistry::RegistryAddressChanged",
        "kind": "nested"
      }
    ]
  }
]
